def thresholding(request):
    if request.method == 'GET':
        return render(request, 'upload_image.html')
    elif request.method == 'POST':
        muestra[0]="0"
        jug=Image.objects.filter(name=imagen_act[0])
        fr=""
        for i in jug:
            fr=i.image.url
        fr=fr[1:]
        print("--------------------")
        print(fr)
        print("--------------------")
        img=cv2.imread(fr)
        img2=cv2.imread(fr)

        Rxval=int(request.POST['Rxval'])
        Ryval=int(request.POST['Ryval'])
        Gxval=int(request.POST['Gxval'])
        Gyval=int(request.POST['Gyval'])
        Bxval=int(request.POST['Bxval'])
        Byval=int(request.POST['Byval'])

        #funcion de thresholding
        fils = len(img)
        cols = len(img[0])
        for x in range(fils):
            for y in range(cols):
                #RED
                if img.item(x,y,0)<=Rxval and Ryval<=img.item(x,y,0):
                    img2.itemset((x, y, 0), 255)
                else:
                    img2.itemset((x, y, 0), 0)
                #GREEN
                if img.item(x,y,1)<=Gxval and Gyval<=img.item(x,y,1):
                    img2.itemset((x, y, 1), 255)
                else:
                    img2.itemset((x, y, 1), 0)
                #BLUE
                if img.item(x,y,2)<=Bxval and Byval<=img.item(x,y,2):
                    img2.itemset((x, y, 2), 255)
                else:
                    img2.itemset((x, y, 2), 0)
        #fin de la funcion
        cv2.imwrite('gallery/Imagenes/gallery/kilo.jpg',img2)
        #actualizar la pagina de la funcion
        return HttpResponseRedirect('/gallery/upload_image/')

def logarithm(request):
    if request.method == 'GET':
        return render(request, 'upload_image.html')
    elif request.method == 'POST':
        muestra[0]="0"
        jug=Image.objects.filter(name=imagen_act[0])
        fr=""
        for i in jug:
            fr=i.image.url
        fr=fr[1:]
        print("--------------------")
        print(fr)
        print("--------------------")
        img=cv2.imread(fr)
        img2=cv2.imread(fr)

        cval=int(request.POST['cval'])

        #funcion Logaritmo customisada
        fils = len(img)
        cols = len(img[0])

        cont=fils*cols
        p=[0]*256

        for x in range(fils):
            for y in range(cols):
                p=c*math.log(1+img.item(x,y,0),10)
                if p>255:
                    p=255
                if p<0:
                    p=0
                img2.itemset((x,y,0),int(p))
                p=c*math.log(1+img.item(x,y,1),10)
                if p>255:
                    p=255
                if p<0:
                    p=0
                img2.itemset((x,y,1),int(p))
                p=c*math.log(1+img.item(x,y,2),10)
                if p>255:
                    p=255
                if p<0:
                    p=0
            img2.itemset((x,y,2),int(p))
        #fin de la funcion
        cv2.imwrite('gallery/Imagenes/gallery/kilo.jpg',img2)
        #actualizar la pagina de la funcion
        return HttpResponseRedirect('/gallery/upload_image/')


def raiz(request):
    if request.method == 'GET':
        return render(request, 'upload_image.html')
    elif request.method == 'POST':
        muestra[0]="0"
        jug=Image.objects.filter(name=imagen_act[0])
        fr=""
        for i in jug:
            fr=i.image.url
        fr=fr[1:]
        print("--------------------")
        print(fr)
        print("--------------------")
        img=cv2.imread(fr)
        img2=cv2.imread(fr)

        cval=int(request.POST['cval'])

        #funcion Logaritmo customisada
        fils = len(img)
        cols = len(img[0])

        cont=fils*cols
        p=[0]*256

        for x in range(fils):
            for y in range(cols):
                p=c*math.sqrt(img.item(x,y,0))
                if p>255:
                    p=255
                if p<0:
                    p=0
                img2.itemset((x,y,0),int(p))
                p=c*math.sqrt(img.item(x,y,1))
                if p>255:
                    p=255
                if p<0:
                    p=0
                img2.itemset((x,y,1),int(p))
                p=c*math.sqrt(img.item(x,y,2))
                if p>255:
                    p=255
                if p<0:
                    p=0
                img2.itemset((x,y,2),int(p))
        #fin de la funcion
        cv2.imwrite('gallery/Imagenes/gallery/kilo.jpg',img2)
        #actualizar la pagina de la funcion
        return HttpResponseRedirect('/gallery/upload_image/')

def exponencial(request):
    if request.method == 'GET':
        return render(request, 'upload_image.html')
    elif request.method == 'POST':
        muestra[0]="0"
        jug=Image.objects.filter(name=imagen_act[0])
        fr=""
        for i in jug:
            fr=i.image.url
        fr=fr[1:]
        print("--------------------")
        print(fr)
        print("--------------------")
        img=cv2.imread(fr)
        img2=cv2.imread(fr)

        cval=int(request.POST['cval'])

        #funcion Logaritmo customisada
        fils = len(img)
        cols = len(img[0])

        cont=fils*cols
        p=[0]*256

        c=20
        b=1.01

        for x in range(fils):
            for y in range(cols):
                p=c*(pow(b,img.item(x,y,0))-1)
                if p>255:
                    p=255
                if p<0:
                    p=0
                img2.itemset((x,y,0),int(p))
                p=c*(pow(b,img.item(x,y,1))-1)
                if p>255:
                    p=255
                if p<0:
                    p=0
                img2.itemset((x,y,1),int(p))
                p=c*(pow(b,img.item(x,y,2))-1)
                if p>255:
                    p=255
                if p<0:
                    p=0
                img2.itemset((x,y,2),int(p))
        #fin de la funcion
        cv2.imwrite('gallery/Imagenes/gallery/kilo.jpg',img2)
        #actualizar la pagina de la funcion
        return HttpResponseRedirect('/gallery/upload_image/')


def raise_to_power(request):
    if request.method == 'GET':
        return render(request, 'upload_image.html')
    elif request.method == 'POST':
        muestra[0]="0"
        jug=Image.objects.filter(name=imagen_act[0])
        fr=""
        for i in jug:
            fr=i.image.url
        fr=fr[1:]
        print("--------------------")
        print(fr)
        print("--------------------")
        img=cv2.imread(fr)
        img2=cv2.imread(fr)

        cval=int(request.POST['cval'])

        #funcion Logaritmo customisada
        fils = len(img)
        cols = len(img[0])

        cont=fils*cols

        p=[0]*256
        c=0.1
        r=1.5
        for x in range(fils):
            for y in range(cols):
                p=c*pow(img.item(x,y,0),r)
                if p>255:
                    p=255
                if p<0:
                    p=0
                img2.itemset((x,y,0),int(p))

                p=c*pow(img.item(x,y,1),r)
                if p>255:
                    p=255
                if p<0:
                    p=0
                img2.itemset((x,y,1),int(p))

                p=c*pow(img.item(x,y,2),r)
                if p>255:
                    p=255
                if p<0:
                    p=0
                img2.itemset((x,y,2),int(p))

        #fin de la funcion
        cv2.imwrite('gallery/Imagenes/gallery/kilo.jpg',img2)
        #actualizar la pagina de la funcion
        return HttpResponseRedirect('/gallery/upload_image/')

